In file included from [01m[K/usr/include/eigen3/Eigen/Core:164[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/../include/kalman_filter.h:4[m[K,
                 from [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:1[m[K:
/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h: In instantiation of â€˜[01m[Kconst Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 2, 1>; Derived = Eigen::Matrix<float, 3, 3>][m[Kâ€™:
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:46:17:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:419:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: INVALID_MATRIX_PRODUCT
  419 |   [01;31m[KEIGEN_STATIC_ASSERT[m[K(ProductIsValid || SameSizes, INVALID_MATRIX_PRODUCT)
      |   [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:419:3:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false || false)[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h: In instantiation of â€˜[01m[Kconst Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 3>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >][m[Kâ€™:
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:47:49:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:419:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: INVALID_MATRIX_PRODUCT
[01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:419:3:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false || false)[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of â€˜[01m[KEigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<float, float>; LhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >; RhsType = const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:19:1:[m[K   required from â€˜[01m[Kconst Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; Derived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >; typename Eigen::internal::traits<OtherDerived>::Scalar = float; typename Eigen::internal::traits<T>::Scalar = float][m[Kâ€™
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:47:44:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
  115 |       [01;31m[KEIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE[m[K(Lhs, Rhs)
      |       [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> > >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >::ret) == 0)) || ((((((int)Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >::RowsAtCompileTime) == ((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>::RowsAtCompileTime))) && (((((int)Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >::ColsAtCompileTime) == ((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>::ColsAtCompileTime)))))[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of â€˜[01m[KEigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<float, float>; LhsType = const Eigen::Matrix<float, 2, 1>; RhsType = const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::Matrix<float, 2, 1>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:19:1:[m[K   required from â€˜[01m[Kconst Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>; Derived = Eigen::Matrix<float, 2, 1>; typename Eigen::internal::traits<OtherDerived>::Scalar = float; typename Eigen::internal::traits<T>::Scalar = float][m[Kâ€™
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:55:42:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
[01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Matrix<float, 2, 1> >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >::ret) == 0)) || ((((((int)Eigen::Matrix<float, 2, 1>::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<float, 2, 1>::RowsAtCompileTime) == ((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>::RowsAtCompileTime))) && (((((int)Eigen::Matrix<float, 2, 1>::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<float, 2, 1>::ColsAtCompileTime) == ((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>::ColsAtCompileTime)))))[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of â€˜[01m[KEigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; RhsType = const Eigen::Matrix<float, 2, 2>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Matrix<float, 2, 2>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:27:1:[m[K   required from â€˜[01m[Kconst Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator+(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 2, 2>; Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; typename Eigen::internal::traits<OtherDerived>::Scalar = float; typename Eigen::internal::traits<T>::Scalar = float][m[Kâ€™
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:58:54:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
[01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0> >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Matrix<float, 2, 2> >::ret) == 0)) || ((((((int)Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Matrix<float, 2, 2>::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>::RowsAtCompileTime) == ((int)Eigen::Matrix<float, 2, 2>::RowsAtCompileTime))) && (((((int)Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Matrix<float, 2, 2>::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>::ColsAtCompileTime) == ((int)Eigen::Matrix<float, 2, 2>::ColsAtCompileTime)))))[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 2, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >; Func = Eigen::internal::assign_op<float, float>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:797:41:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >; Derived = Eigen::Matrix<float, 2, 1>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:594:19:[m[K   required from â€˜[01m[KEigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >; Derived = Eigen::Matrix<float, 2, 1>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:423:29:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >; _Scalar = float; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1][m[Kâ€™
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:44:33:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
  887 |   [01;31m[KEIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE[m[K(ActualDstTypeCleaned,Src)
      |   [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Matrix<float, 2, 1> >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> > >::ret) == 0)) || ((((((int)Eigen::Matrix<float, 2, 1>::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<float, 2, 1>::RowsAtCompileTime) == ((int)Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >::RowsAtCompileTime))) && (((((int)Eigen::Matrix<float, 2, 1>::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<float, 2, 1>::ColsAtCompileTime) == ((int)Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >::ColsAtCompileTime)))))[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Matrix<float, 2, 3, 0, 2, 3>; Func = Eigen::internal::assign_op<float, float>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:851:27:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*; typename Eigen::internal::evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:18:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:779:32:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Derived = Eigen::Matrix<float, 3, 3>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:225:24:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3][m[Kâ€™
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:47:49:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Matrix<float, 3, 3> >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Matrix<float, 2, 3, 0, 2, 3> >::ret) == 0)) || ((((((int)Eigen::Matrix<float, 3, 3>::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Matrix<float, 2, 3, 0, 2, 3>::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<float, 3, 3>::RowsAtCompileTime) == ((int)Eigen::Matrix<float, 2, 3, 0, 2, 3>::RowsAtCompileTime))) && (((((int)Eigen::Matrix<float, 3, 3>::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Matrix<float, 2, 3, 0, 2, 3>::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<float, 3, 3>::ColsAtCompileTime) == ((int)Eigen::Matrix<float, 2, 3, 0, 2, 3>::ColsAtCompileTime)))))[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 2, 1>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>; Func = Eigen::internal::sub_assign_op<float, float>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:224:29:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::assignment_from_xpr_op_product<DstXprType, OtherXpr, ProductType, Func1, Func2>::run(DstXprType&, const SrcXprType&, const InitialFunc&) [with SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 2, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >; InitialFunc = Eigen::internal::assign_op<float, float>; DstXprType = Eigen::Matrix<float, 2, 1>; OtherXpr = Eigen::Matrix<float, 2, 1>; ProductType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>; Func1 = Eigen::internal::assign_op<float, float>; Func2 = Eigen::internal::sub_assign_op<float, float>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:890:49:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 2, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 2, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >; Func = Eigen::internal::assign_op<float, float>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:797:41:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 2, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >; Derived = Eigen::Matrix<float, 2, 1>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:594:19:[m[K   required from â€˜[01m[KEigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 2, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >; Derived = Eigen::Matrix<float, 2, 1>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:423:29:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 2, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >; _Scalar = float; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1][m[Kâ€™
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:55:42:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Matrix<float, 2, 1> >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0> >::ret) == 0)) || ((((((int)Eigen::Matrix<float, 2, 1>::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<float, 2, 1>::RowsAtCompileTime) == ((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>::RowsAtCompileTime))) && (((((int)Eigen::Matrix<float, 2, 1>::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<float, 2, 1>::ColsAtCompileTime) == ((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>::ColsAtCompileTime)))))[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h: In instantiation of â€˜[01m[Kconst Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 3>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:402:50:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 2, 3, 0, 2, 3>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >; Rhs = Eigen::Matrix<float, 3, 3>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:148:43:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, 2, 3, 0, 2, 3>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >; Rhs = Eigen::Matrix<float, 3, 3>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:890:49:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 2, 3, 0, 2, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Func = Eigen::internal::assign_op<float, float>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:797:41:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Derived = Eigen::Matrix<float, 2, 3, 0, 2, 3>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:883:25:[m[K   required from â€˜[01m[Kvoid Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Derived = Eigen::Matrix<float, 2, 3, 0, 2, 3>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:332:31:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; _Scalar = float; int _Rows = 2; int _Cols = 3; int _Options = 0; int _MaxRows = 2; int _MaxCols = 3][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:850:41:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*; typename Eigen::internal::evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:18:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:779:32:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Derived = Eigen::Matrix<float, 3, 3>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:225:24:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3][m[Kâ€™
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:47:49:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:458:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: INVALID_MATRIX_PRODUCT
  458 |   [01;31m[KEIGEN_STATIC_ASSERT[m[K(ProductIsValid || SameSizes, INVALID_MATRIX_PRODUCT)
      |   [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:458:3:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false || false)[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h: In instantiation of â€˜[01m[Kconst Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 2, 1>; Derived = Eigen::Matrix<float, 3, 3>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:409:50:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 3, 1>; Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Matrix<float, 2, 1>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:163:42:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, 3, 1>; Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Matrix<float, 2, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:890:49:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0>; Func = Eigen::internal::add_assign_op<float, float>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:224:29:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::assignment_from_xpr_op_product<DstXprType, OtherXpr, ProductType, Func1, Func2>::run(DstXprType&, const SrcXprType&, const InitialFunc&) [with SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0> >; InitialFunc = Eigen::internal::assign_op<float, float>; DstXprType = Eigen::Matrix<float, 3, 1>; OtherXpr = Eigen::Matrix<float, 3, 1>; ProductType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0>; Func1 = Eigen::internal::assign_op<float, float>; Func2 = Eigen::internal::add_assign_op<float, float>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:890:49:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0> >; Func = Eigen::internal::assign_op<float, float>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:797:41:[m[K   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:332:31:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0> >; _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:850:41:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*; typename Eigen::internal::evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:18:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0> >][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:779:32:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0> >; Derived = Eigen::Matrix<float, 3, 1>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:225:24:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0> >; _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1][m[Kâ€™
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:46:17:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:458:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: INVALID_MATRIX_PRODUCT
[01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:458:3:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false || false)[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of â€˜[01m[KEigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 2, 2>, 1, 2, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 2, 2>, 1, 2, false> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/plugins/MatrixCwiseBinaryOps.h:25:10:[m[K   required from â€˜[01m[Kconst Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>; Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 2, 2>, 1, 2, false> >; typename Eigen::internal::traits<OtherDerived>::Scalar = float; typename Eigen::internal::traits<T>::Scalar = float][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:606:52:[m[K   required from â€˜[01m[Kconst CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >; Rhs = Eigen::Matrix<float, 3, 3>; int ProductTag = 3; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = float; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::Matrix<float, 3, 3>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = float; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >; Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType = float; Eigen::Index = long int][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:654:63:[m[K   required from â€˜[01m[Kvoid Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 2, 3, 0, 2, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0; Eigen::Index = long int][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:668:16:[m[K   required from â€˜[01m[Kvoid Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeffByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 2, 3, 0, 2, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0; Eigen::Index = long int][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:211:35:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 2, 3, 0, 2, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 6][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:359:107:[m[K   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:332:31:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; _Scalar = float; int _Rows = 2; int _Cols = 3; int _Options = 0; int _MaxRows = 2; int _MaxCols = 3][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:850:41:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*; typename Eigen::internal::evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:18:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:779:32:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Derived = Eigen::Matrix<float, 3, 3>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:225:24:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3][m[Kâ€™
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:47:49:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
  115 |       [01;31m[KEIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE[m[K(Lhs, Rhs)
      |       [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 2, 2>, 1, 2, false> > >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >::ret) == 0)) || ((((((int)Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 2, 2>, 1, 2, false> >::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 2, 2>, 1, 2, false> >::RowsAtCompileTime) == ((int)Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>::RowsAtCompileTime))) && (((((int)Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 2, 2>, 1, 2, false> >::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 2, 2>, 1, 2, false> >::ColsAtCompileTime) == ((int)Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>::ColsAtCompileTime)))))[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 2, 2>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; Func = Eigen::internal::sub_assign_op<float, float>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:224:29:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::assignment_from_xpr_op_product<DstXprType, OtherXpr, ProductType, Func1, Func2>::run(DstXprType&, const SrcXprType&, const InitialFunc&) [with SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >; InitialFunc = Eigen::internal::assign_op<float, float>; DstXprType = Eigen::Matrix<float, 2, 2>; OtherXpr = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >; ProductType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; Func1 = Eigen::internal::assign_op<float, float>; Func2 = Eigen::internal::sub_assign_op<float, float>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:890:49:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 2, 2>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >; Func = Eigen::internal::assign_op<float, float>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:797:41:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >; Derived = Eigen::Matrix<float, 2, 2>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:883:25:[m[K   required from â€˜[01m[Kvoid Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >; Derived = Eigen::Matrix<float, 2, 2>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:332:31:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >; _Scalar = float; int _Rows = 2; int _Cols = 2; int _Options = 0; int _MaxRows = 2; int _MaxCols = 2][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:500:7:[m[K   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:332:31:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; _Scalar = float; int _Rows = 2; int _Cols = 3; int _Options = 0; int _MaxRows = 2; int _MaxCols = 3][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:850:41:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*; typename Eigen::internal::evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:18:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:779:32:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Derived = Eigen::Matrix<float, 3, 3>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:225:24:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<float>, Eigen::Matrix<float, 2, 2> >, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3][m[Kâ€™
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:47:49:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
  887 |   [01;31m[KEIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE[m[K(ActualDstTypeCleaned,Src)
      |   [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Matrix<float, 2, 2> >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0> >::ret) == 0)) || ((((((int)Eigen::Matrix<float, 2, 2>::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<float, 2, 2>::RowsAtCompileTime) == ((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>::RowsAtCompileTime))) && (((((int)Eigen::Matrix<float, 2, 2>::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<float, 2, 2>::ColsAtCompileTime) == ((int)Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>::ColsAtCompileTime)))))[m[Kâ€™ evaluates to false
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of â€˜[01m[KEigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 2, 1>, 2, 1, true>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Block<const Eigen::Matrix<float, 2, 1>, 2, 1, true>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/plugins/MatrixCwiseBinaryOps.h:25:10:[m[K   required from â€˜[01m[Kconst Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Matrix<float, 2, 1>, 2, 1, true>; Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; typename Eigen::internal::traits<OtherDerived>::Scalar = float; typename Eigen::internal::traits<T>::Scalar = float][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:606:52:[m[K   required from â€˜[01m[Kconst CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Matrix<float, 2, 1>; int ProductTag = 3; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Rhs>::Scalar = float; typename Eigen::Product<Lhs, Rhs, 1>::Rhs = Eigen::Matrix<float, 2, 1>; typename Eigen::internal::traits<typename Eigen::Product<Lhs, Rhs, 1>::Lhs>::Scalar = float; typename Eigen::Product<Lhs, Rhs, 1>::Lhs = Eigen::Matrix<float, 3, 3>; Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::CoeffReturnType = float; Eigen::Index = long int][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:654:63:[m[K   required from â€˜[01m[Kvoid Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 1> >; Functor = Eigen::internal::add_assign_op<float, float>; int Version = 0; Eigen::Index = long int][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:668:16:[m[K   required from â€˜[01m[Kvoid Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeffByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 1> >; Functor = Eigen::internal::add_assign_op<float, float>; int Version = 0; Eigen::Index = long int][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:211:35:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 1> >, Eigen::internal::add_assign_op<float, float>, 0>; int Index = 0; int Stop = 3][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:456:92:[m[K   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:332:31:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0> >; _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:850:41:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*; typename Eigen::internal::evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:18:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0> >][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:779:32:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0> >; Derived = Eigen::Matrix<float, 3, 1>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:225:24:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 2, 1>, 0> >; _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1][m[Kâ€™
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4.cpp:46:17:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
  115 |       [01;31m[KEIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE[m[K(Lhs, Rhs)
      |       [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> > >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Block<const Eigen::Matrix<float, 2, 1>, 2, 1, true> >::ret) == 0)) || ((((((int)Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Block<const Eigen::Matrix<float, 2, 1>, 2, 1, true>::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >::RowsAtCompileTime) == ((int)Eigen::Block<const Eigen::Matrix<float, 2, 1>, 2, 1, true>::RowsAtCompileTime))) && (((((int)Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Block<const Eigen::Matrix<float, 2, 1>, 2, 1, true>::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >::ColsAtCompileTime) == ((int)Eigen::Block<const Eigen::Matrix<float, 2, 1>, 2, 1, true>::ColsAtCompileTime)))))[m[Kâ€™ evaluates to false
gmake[2]: *** [CMakeFiles/kf_v4.dir/build.make:90: CMakeFiles/kf_v4.dir/src/kf_v4.cpp.o] Error 1
gmake[2]: *** Waiting for unfinished jobs....
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4_node.cpp:[m[K In member function â€˜[01m[Kvoid kf_node::sonar_callback2(const ThreeSonarDepth&)[m[Kâ€™:
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4_node.cpp:136:65:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  136 |    void sonar_callback2([01;35m[Kconst sonar_msgs::msg::ThreeSonarDepth& msg[m[K)
      |                         [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:164[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/../include/sonar_processing.h:6[m[K,
                 from [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4_node.cpp:3[m[K:
/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 2, 1>; Src = Eigen::Matrix<float, 3, 1>; Func = Eigen::internal::assign_op<float, float>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:858:27:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, 2, 1>; Src = Eigen::Matrix<float, 3, 1>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*; typename Eigen::internal::evaluator_traits<SrcXprType>::Shape = Eigen::DenseShape][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:836:18:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 2, 1>; Src = Eigen::Matrix<float, 3, 1>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:779:32:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<float, 3, 1>; Derived = Eigen::Matrix<float, 2, 1>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:225:24:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<float, 3, 1>; _Scalar = float; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1][m[Kâ€™
[01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v4_node.cpp:170:89:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
  887 |   [01;31m[KEIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE[m[K(ActualDstTypeCleaned,Src)
      |   [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Matrix<float, 2, 1> >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Matrix<float, 3, 1> >::ret) == 0)) || ((((((int)Eigen::Matrix<float, 2, 1>::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Matrix<float, 3, 1>::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<float, 2, 1>::RowsAtCompileTime) == ((int)Eigen::Matrix<float, 3, 1>::RowsAtCompileTime))) && (((((int)Eigen::Matrix<float, 2, 1>::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Matrix<float, 3, 1>::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Matrix<float, 2, 1>::ColsAtCompileTime) == ((int)Eigen::Matrix<float, 3, 1>::ColsAtCompileTime)))))[m[Kâ€™ evaluates to false
gmake[2]: *** [CMakeFiles/kf_v4.dir/build.make:76: CMakeFiles/kf_v4.dir/src/kf_v4_node.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/kf_v4.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
