[0.010s] Invoking command in '/home/uwr/Desktop/2024_UWR/build/kalman_filter': CMAKE_PREFIX_PATH=/home/uwr/Desktop/2024_UWR/install/sonar_msgs:/home/uwr/Desktop/2024_UWR/install/xsens_mti_ros2_driver:/home/uwr/Desktop/2024_UWR/install/kalman_filter:/home/uwr/Desktop/2024_UWR/install/ntrip:/home/uwr/Desktop/2024_UWR/install/sonar_subs:/opt/ros/humble LD_LIBRARY_PATH=/home/uwr/Desktop/2024_UWR/install/sonar_msgs/lib:/home/uwr/Desktop/2024_UWR/install/xsens_mti_ros2_driver/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib /usr/bin/cmake --build /home/uwr/Desktop/2024_UWR/build/kalman_filter -- -j8 -l8
[0.050s] [35m[1mConsolidate compiler generated dependencies of target kf[0m
[0.076s] [ 20%] [32mBuilding CXX object CMakeFiles/kf.dir/src/kf_v3_node.cpp.o[0m
[4.868s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:127:47:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KSharedPtr[m[Kâ€™ in namespace â€˜[01m[Ksensor_msgs::msg[m[Kâ€™ does not name a type
[4.868s]   127 |     void imu_callback(const sensor_msgs::msg::[01;31m[KSharedPtr[m[K imu_msg)
[4.868s]       |                                               [01;31m[K^~~~~~~~~[m[K
[5.033s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:[m[K In member function â€˜[01m[Kvoid kf_node::imu_callback(int)[m[Kâ€™:
[5.033s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:134:33:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Klinear_acceleration[m[Kâ€™ in â€˜[01m[Kimu_msg[m[Kâ€™, which is of non-class type â€˜[01m[Kconst int[m[Kâ€™
[5.033s]   134 |         bef_rotate<<abs(imu_msg.[01;31m[Klinear_acceleration[m[K.x),abs(imu_msg.linear_acceleration.z),1;
[5.033s]       |                                 [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
[5.033s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:134:68:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Klinear_acceleration[m[Kâ€™ in â€˜[01m[Kimu_msg[m[Kâ€™, which is of non-class type â€˜[01m[Kconst int[m[Kâ€™
[5.033s]   134 |         bef_rotate<<abs(imu_msg.linear_acceleration.x),abs(imu_msg.[01;31m[Klinear_acceleration[m[K.z),1;
[5.033s]       |                                                                    [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
[5.042s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:139:34:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Korientation[m[Kâ€™ in â€˜[01m[Kimu_msg[m[Kâ€™, which is of non-class type â€˜[01m[Kconst int[m[Kâ€™
[5.042s]   139 |             tf2::convert(imu_msg.[01;31m[Korientation[m[K, q_orig);
[5.042s]       |                                  [01;31m[K^~~~~~~~~~~[m[K
[5.043s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:150:48:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Klinear_acceleration[m[Kâ€™ in â€˜[01m[Kimu_msg[m[Kâ€™, which is of non-class type â€˜[01m[Kconst int[m[Kâ€™
[5.043s]   150 |             heave.set_accel_bias(true, imu_msg.[01;31m[Klinear_acceleration[m[K.z);
[5.043s]       |                                                [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
[5.043s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:158:51:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Klinear_acceleration[m[Kâ€™ in â€˜[01m[Kimu_msg[m[Kâ€™, which is of non-class type â€˜[01m[Kconst int[m[Kâ€™
[5.044s]   158 |             heave_accel = heave.set_accel(imu_msg.[01;31m[Klinear_acceleration[m[K.z);
[5.044s]       |                                                   [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
[5.044s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:167:48:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kheader[m[Kâ€™ in â€˜[01m[Kimu_msg[m[Kâ€™, which is of non-class type â€˜[01m[Kconst int[m[Kâ€™
[5.044s]   167 |             vector3_msg.header.stamp = imu_msg.[01;31m[Kheader[m[K.stamp;
[5.044s]       |                                                [01;31m[K^~~~~~[m[K
[5.044s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:172:44:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kheader[m[Kâ€™ in â€˜[01m[Kimu_msg[m[Kâ€™, which is of non-class type â€˜[01m[Kconst int[m[Kâ€™
[5.044s]   172 |             vel_msg.header.stamp = imu_msg.[01;31m[Kheader[m[K.stamp;
[5.044s]       |                                            [01;31m[K^~~~~~[m[K
[5.044s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:177:45:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kheader[m[Kâ€™ in â€˜[01m[Kimu_msg[m[Kâ€™, which is of non-class type â€˜[01m[Kconst int[m[Kâ€™
[5.044s]   177 |             pose_msg.header.stamp = imu_msg.[01;31m[Kheader[m[K.stamp;
[5.045s]       |                                             [01;31m[K^~~~~~[m[K
[5.059s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:[m[K In member function â€˜[01m[Kvoid kf_node::sonar_callback(sonar_msgs::msg::ThreeSonarDepth_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[5.059s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:228:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<sonar_msgs::msg::ThreeSonarDepth_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kdistance_1[m[Kâ€™
[5.059s]   228 |         surge.set_dist(msg.[01;31m[Kdistance_1[m[K / 1000);
[5.059s]       |                            [01;31m[K^~~~~~~~~~[m[K
[5.059s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:229:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<sonar_msgs::msg::ThreeSonarDepth_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kdepth[m[Kâ€™
[5.059s]   229 |         heave.set_dist(msg.[01;31m[Kdepth[m[K);
[5.059s]       |                            [01;31m[K^~~~~[m[K
[5.059s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:230:27:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<sonar_msgs::msg::ThreeSonarDepth_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kdistance_2[m[Kâ€™
[5.059s]   230 |         sway.set_dist(msg.[01;31m[Kdistance_2[m[K / 1000);
[5.059s]       |                           [01;31m[K^~~~~~~~~~[m[K
[5.060s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:267:45:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<sonar_msgs::msg::ThreeSonarDepth_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kdistance_1[m[Kâ€™
[5.060s]   267 |             surge_dist = surge.set_dist(msg.[01;31m[Kdistance_1[m[K / 1000);
[5.060s]       |                                             [01;31m[K^~~~~~~~~~[m[K
[5.060s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:268:43:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<sonar_msgs::msg::ThreeSonarDepth_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kdistance_2[m[Kâ€™
[5.060s]   268 |             sway_dist = sway.set_dist(msg.[01;31m[Kdistance_2[m[K / 1000);
[5.060s]       |                                           [01;31m[K^~~~~~~~~~[m[K
[5.060s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:269:45:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<sonar_msgs::msg::ThreeSonarDepth_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kdepth[m[Kâ€™
[5.060s]   269 |             heave_dist = heave.set_dist(msg.[01;31m[Kdepth[m[K);
[5.060s]       |                                             [01;31m[K^~~~~[m[K
[5.060s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:324:38:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<sonar_msgs::msg::ThreeSonarDepth_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kheader[m[Kâ€™
[5.060s]   324 |             k_vals.header.stamp= msg.[01;31m[Kheader[m[K.stamp;
[5.060s]       |                                      [01;31m[K^~~~~~[m[K
[5.062s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:335:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<sonar_msgs::msg::ThreeSonarDepth_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kheader[m[Kâ€™
[5.062s]   335 |             c1.header.stamp = msg.[01;31m[Kheader[m[K.stamp;
[5.062s]       |                                   [01;31m[K^~~~~~[m[K
[5.062s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/logging.hpp:24[m[K,
[5.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:40[m[K,
[5.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[5.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[5.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[5.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[5.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[5.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[5.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[5.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[5.063s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[5.063s]                  from [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:1[m[K:
[5.063s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:344:64:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<sonar_msgs::msg::ThreeSonarDepth_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kdistance_1[m[Kâ€™
[5.063s]   344 |             RCLCPP_INFO(this->get_logger(),"Distance: %f", msg.[01;31m[Kdistance_1[m[K / 1000);
[5.063s]       |                                                                [01;31m[K^~~~~~~~~~[m[K
[5.063s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:347:41:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<sonar_msgs::msg::ThreeSonarDepth_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kheader[m[Kâ€™
[5.063s]   347 |             pose_msg.header.stamp = msg.[01;31m[Kheader[m[K.stamp;
[5.063s]       |                                         [01;31m[K^~~~~~[m[K
[5.063s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:355:44:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<sonar_msgs::msg::ThreeSonarDepth_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kheader[m[Kâ€™
[5.063s]   355 |             vector3_msg.header.stamp = msg.[01;31m[Kheader[m[K.stamp;
[5.063s]       |                                            [01;31m[K^~~~~~[m[K
[5.063s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:367:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<sonar_msgs::msg::ThreeSonarDepth_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kheader[m[Kâ€™
[5.063s]   367 |             vel_msg.header.stamp = msg.[01;31m[Kheader[m[K.stamp;
[5.064s]       |                                        [01;31m[K^~~~~~[m[K
[5.786s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[5.786s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[5.786s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[5.786s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[5.786s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[5.786s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[5.786s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[5.786s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[5.786s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[5.787s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[5.787s]                  from [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:1[m[K:
[5.787s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[5.787s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, sensor_msgs::msg::Imu_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = sensor_msgs::msg::Imu_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[5.787s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, sensor_msgs::msg::Imu_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = sensor_msgs::msg::Imu_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[5.787s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, sensor_msgs::msg::Imu_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[5.787s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, sensor_msgs::msg::Imu_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[5.787s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:102:79:[m[K   required from here
[5.787s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<sensor_msgs::msg::Imu_<std::allocator<void> >, std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(int)>[m[Kâ€™})
[5.787s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[5.787s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[5.788s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[5.788s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[5.788s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[5.788s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[5.788s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[5.788s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[5.788s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[5.788s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[5.788s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[5.788s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[5.788s]                  from [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:1[m[K:
[5.788s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[5.788s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[5.788s]       |         [01;36m[K^~~~~~~~[m[K
[5.788s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.788s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(int)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[5.788s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(int)>][m[Kâ€™
[5.788s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[5.789s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, sensor_msgs::msg::Imu_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = sensor_msgs::msg::Imu_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[5.789s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, sensor_msgs::msg::Imu_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = sensor_msgs::msg::Imu_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[5.789s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, sensor_msgs::msg::Imu_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[5.789s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, sensor_msgs::msg::Imu_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[5.789s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:102:79:[m[K   required from here
[5.789s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[5.789s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[5.789s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[5.789s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[5.789s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, sensor_msgs::msg::Imu_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = sensor_msgs::msg::Imu_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[5.789s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, sensor_msgs::msg::Imu_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = sensor_msgs::msg::Imu_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[5.789s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, sensor_msgs::msg::Imu_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[5.789s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; CallbackT = std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void>, sensor_msgs::msg::Imu_<std::allocator<void> >, sensor_msgs::msg::Imu_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[5.789s] [01m[K/home/uwr/Desktop/2024_UWR/src/kalman_filter/src/kf_v3_node.cpp:102:79:[m[K   required from here
[5.789s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[5.789s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[5.789s]       |                [01;36m[K^~~~~~~~[m[K
[5.789s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<sensor_msgs::msg::Imu_<std::allocator<void> >, std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(int)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[5.789s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[5.790s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[5.790s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[5.790s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[5.790s]       |                [01;36m[K^~~~~~~~[m[K
[5.790s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<sensor_msgs::msg::Imu_<std::allocator<void> >, std::_Bind<void (kf_node::*(kf_node*, std::_Placeholder<1>))(int)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(int)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&)>, std::function<void(const sensor_msgs::msg::Imu_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<sensor_msgs::msg::Imu_<std::allocator<void> >, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const sensor_msgs::msg::Imu_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[5.790s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[5.790s]       |                          [01;36m[K^~~~~~~~~[m[K
[8.765s] gmake[2]: *** [CMakeFiles/kf.dir/build.make:76: CMakeFiles/kf.dir/src/kf_v3_node.cpp.o] Error 1
[8.765s] gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/kf.dir/all] Error 2
[8.766s] gmake: *** [Makefile:146: all] Error 2
[8.767s] Invoked command in '/home/uwr/Desktop/2024_UWR/build/kalman_filter' returned '2': CMAKE_PREFIX_PATH=/home/uwr/Desktop/2024_UWR/install/sonar_msgs:/home/uwr/Desktop/2024_UWR/install/xsens_mti_ros2_driver:/home/uwr/Desktop/2024_UWR/install/kalman_filter:/home/uwr/Desktop/2024_UWR/install/ntrip:/home/uwr/Desktop/2024_UWR/install/sonar_subs:/opt/ros/humble LD_LIBRARY_PATH=/home/uwr/Desktop/2024_UWR/install/sonar_msgs/lib:/home/uwr/Desktop/2024_UWR/install/xsens_mti_ros2_driver/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib /usr/bin/cmake --build /home/uwr/Desktop/2024_UWR/build/kalman_filter -- -j8 -l8
